service: haveibeenbreached

frameworkVersion: "2"

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  region: ap-southeast-1
  stage: dev

  # you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:ListTables"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "sqs:ListQueues"
            - "sqs:GetQueueUrl"
            - "sqs:SendMessage"
          Resource: "*"

package:
  patterns:
    - "!./**"
    - ./bin/**

functions:
  createBreach:
    handler: bin/createBreach
    events:
      - httpApi:
          path: /api/v1/breaches
          method: post
  addAccountsToBreach:
    handler: bin/addAccountsToBreach
    events:
      - httpApi:
          path: /api/v1/breaches/{BreachName}
          method: post
  findAccount:
    handler: bin/findAccount
    events:
      - httpApi:
          path: /api/v1/breachedaccounts/{Username}
          method: get
  notifyMe:
    handler: bin/notifyMe
    events:
      - httpApi:
          path: /api/v1/notifyMe
          method: post
  sendSubscriptionEmail:
    handler: bin/sendSubscriptionEmail
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - subscriptionsQueue
              - Arn

# CloudFormation resource templates
resources:
  Resources:
    breachesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Breaches
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    subscriptionsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "subscriptions"
